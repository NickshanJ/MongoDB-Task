-- Create Database and Collections --

1 -- Connect to MongoDB:

Use mongosh to connect the MongoDB in Command Prompt

2 -- Create Database:

Use zenclassDB;

3 -- Create Collections and Insert Data

-- 1 -- Create "users" Collection and Insert Data

db.createCollection("users");

db.users.insertMany([
  { user_id: 1, name: "Nickshan", email: "Nick@gmail.com",phone: "1234567890",drive_id: 1 },
  { user_id: 2, name: "Bharath", email: "bharath@gmail.com",phone: "0987654321",drive_id: 2 },
  { user_id: 3, name: "Dino", email: "dino@gmail.com",phone: "1122334455",drive_id: 3 },
]);

-- 2 -- Create "codekata" Collection and Insert Data

db.createCollection("codekata");

db.codekata.insertMany([
  { user_id: 1, problem_solved: 150 },
  { user_id: 2, problem_solved: 130 },
  { user_id: 3, problem_solved: 110 }
]);

-- 3 -- Create "attendance" Collection and Insert Data

db.createCollection("attendance");

db.attendance.insertMany([
  { user_id: 1, date: ISODate("2020-10-20"), status: "present" },
  { user_id: 2, date: ISODate("2020-10-21"), status: "absent" },
  { user_id: 3, date: ISODate("2020-10-22"), status: "present" }
]);

-- 4 -- Create "topics" Collection and Insert Data

-db.createCollection("topics");

db.topics.insertMany([
  { topic_id: 1, topic_name: "Introduction to React", topic_date: ISODate("2020-10-05") },
  { topic_id: 2, topic_name: "Introduction to MongoDB", topic_date: ISODate("2020-10-20") },
  { topic_id: 3, topic_name: "Introduction to Node.Js", topic_date: ISODate("2020-11-01") }
]);

-- 5 -- Create "tasks" Collection and Insert Data

db.createCollection("tasks");

db.tasks.insertMany([
  { task_id: 1, task_name: "React Model", task_date: ISODate("2020-10-05"), status: "completed", user_id: 1 },
  { task_id: 2, task_name: "Creating Database in MongoDB", task_date: ISODate("2020-10-10"), status: "not submitted", user_id: 2 },
  { task_id: 3, task_name: "Node.Js Basics", task_date: ISODate("2020-11-01"), status: "completed", user_id: 3 }
]);

-- 6 -- Create "company_drives" Collection and Insert Data

db.createCollection("company_drives");

db.company_drives.insertMany([
  { drive_id: 1, company_name: "Google", drive_date: ISODate("2020-10-18") },
  { drive_id: 2, company_name: "Microsoft", drive_date: ISODate("2020-10-20") },
  { drive_id: 3, company_name: "Amazon", drive_date: ISODate("2020-10-25") }
]);

-- 7 -- Create "mentors" Collection and Insert Data

db.createCollection("mentors");

db.mentors.insertMany([
  { mentor_id: 1, name: "Vasantharajan R", mentees_count: 25 },
  { mentor_id: 2, name: "Rupan", mentees_count: 15 },
  { mentor_id: 3, name: "Thirupathi C", mentees_count: 20 }
]);


-- Queries  --

-- 1 -- Find all the topics and tasks which are thought in the month of October

db.topics.find({ topic_date: { $gte: ISODate("2020-10-01"), $lt: ISODate("2020-11-01") } });

db.tasks.find({ task_date: { $gte: ISODate("2020-10-01"), $lt: ISODate("2020-11-01") } });

-- 2 -- Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020

db.company_drives.find({ drive_date: { $gte: ISODate("2020-10-15"), $lt: ISODate("2020-11-01") } });

-- 3 -- Find all the company drives and students who are appeared for the placement.

db.company_drives.aggregate([
  {
    $lookup: {
      from: "users",
      localField: "drive_id",
      foreignField: "drive_id",
      as: "students"
    }
  },
  {
    $project: {
      _id: 0,
      company_name: 1,
      students: "$students.name"
    }
  }
]);

-- 4 -- Find the number of problems solved by the user in codekata

db.codekata.aggregate([
  { $group: { _id: "$user_id", totalProblemsSolved: { $sum: "$problem_solved" } } }
]);

-- 5 -- Find all the mentors with who has the mentee's count more than 15

db.mentors.find({ mentees_count: { $gt: 15 } });

-- 6 -- Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

db.attendance.aggregate([
  { $match: { date: { $gte: ISODate("2020-10-15T00:00:00Z"), $lt: ISODate("2020-11-01T00:00:00Z") }, status: "absent" } },
  { $lookup: { from: "tasks", localField: "user_id", foreignField: "user_id", as: "tasks" } },
  { $unwind: "$tasks" },
  { $match: { "tasks.status": "not submitted" } },
  { $lookup: { from: "users", localField: "user_id", foreignField: "user_id", as: "user" } },
  { $project: { _id: 0, user_name: { $arrayElemAt: ["$user.name", 0] }, attendance: "$status", task_name: "$tasks.task_name", task_status: "$tasks.status" } }
]);

